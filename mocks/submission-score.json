{
  "success": true,
  "data": [
    {
      "_id": "682b03b9b5913c257256b631",
      "candidate_id": "682b0362b5913c257256b60a",
      "answers": [
        {
          "question_id": "6825be0117dee8fe148aedec",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aedec",
            "question": "Bạn đang thiết kế một hệ thống quản lý đơn hàng sử dụng Hexagonal Architecture. Một yêu cầu phi chức năng quan trọng là hệ thống phải có khả năng xử lý một lượng lớn đơn hàng đồng thời. Bạn sẽ sử dụng chiến lược nào để đảm bảo khả năng mở rộng của hệ thống?",
            "options": [
              "Sử dụng một cơ sở dữ liệu quan hệ duy nhất.",
              "Triển khai hệ thống dưới dạng một ứng dụng monolithic.",
              "Sử dụng hàng đợi tin nhắn (message queue) để xử lý đơn hàng không đồng bộ.",
              "Tích hợp trực tiếp logic xử lý đơn hàng vào giao diện người dùng."
            ],
            "correctAnswer": 2,
            "difficulty": "hard",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aeded",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aeded",
            "question": "Trong một hệ thống phức tạp sử dụng Hexagonal Architecture, bạn nhận thấy rằng một số Use Case đang trực tiếp truy cập cơ sở dữ liệu thông qua Adapter, thay vì sử dụng Domain Model. Điều này dẫn đến sự trùng lặp logic nghiệp vụ và khó khăn trong việc bảo trì. Làm thế nào bạn có thể giải quyết vấn đề này?",
            "options": [
              "Cho phép Use Case truy cập trực tiếp cơ sở dữ liệu để tăng hiệu suất.",
              "Di chuyển toàn bộ logic nghiệp vụ vào Adapter.",
              "Áp đặt một quy trình review code nghiêm ngặt và đào tạo cho các nhà phát triển về tầm quan trọng của Domain Model.",
              "Loại bỏ Domain Model để đơn giản hóa kiến trúc."
            ],
            "correctAnswer": 2,
            "difficulty": "medium",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aedf0",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aedf0",
            "question": "Trong một hệ thống phân tán sử dụng Hexagonal Architecture, bạn cần đảm bảo tính nhất quán dữ liệu giữa các dịch vụ khác nhau. Bạn sẽ sử dụng chiến lược nào để giải quyết vấn đề này?",
            "options": [
              "Sử dụng giao dịch ACID trên tất cả các dịch vụ.",
              "Sử dụng eventual consistency và compensating transactions.",
              "Tích hợp tất cả các dịch vụ vào cùng một cơ sở dữ liệu.",
              "Loại bỏ Hexagonal Architecture và sử dụng một kiến trúc tập trung hơn."
            ],
            "correctAnswer": 1,
            "difficulty": "hard",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aede8",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aede8",
            "question": "Ưu điểm chính của việc sử dụng Hexagonal Architecture là gì?",
            "options": [
              "Tăng hiệu suất ứng dụng",
              "Giảm độ phức tạp của code",
              "Tăng khả năng kiểm thử",
              "Giảm chi phí phát triển"
            ],
            "correctAnswer": 3,
            "difficulty": "medium",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aedea",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aedea",
            "question": "Một công ty đang phát triển một hệ thống thương mại điện tử lớn sử dụng Hexagonal Architecture. Họ muốn tích hợp một hệ thống thanh toán mới với nhiều giao thức khác nhau. Bạn sẽ đề xuất chiến lược nào để tích hợp hệ thống thanh toán mới một cách linh hoạt và dễ bảo trì?",
            "options": [
              "Tạo một Adapter duy nhất hỗ trợ tất cả các giao thức thanh toán.",
              "Tạo một Adapter riêng biệt cho mỗi giao thức thanh toán.",
              "Tích hợp trực tiếp hệ thống thanh toán vào Domain Model.",
              "Sử dụng một framework ORM để ánh xạ các giao thức thanh toán vào các đối tượng trong Domain Model."
            ],
            "correctAnswer": 1,
            "difficulty": "medium",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aede9",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aede9",
            "question": "Trong một hệ thống lớn sử dụng Hexagonal Architecture, bạn nhận thấy sự chậm trễ đáng kể trong việc xử lý các yêu cầu. Các Use Case phải chờ đợi lâu để nhận được dữ liệu từ một Adapter cụ thể kết nối với một cơ sở dữ liệu legacy. Giải pháp nào sau đây là phù hợp nhất để giải quyết vấn đề này mà không ảnh hưởng đến kiến trúc tổng thể?",
            "options": [
              "Thay thế cơ sở dữ liệu legacy bằng một cơ sở dữ liệu mới, hiệu suất cao hơn.",
              "Tối ưu hóa truy vấn cơ sở dữ liệu và sử dụng caching trong Adapter.",
              "Di chuyển logic nghiệp vụ từ Domain Model vào Adapter để giảm số lượng tương tác.",
              "Loại bỏ Hexagonal Architecture và sử dụng một kiến trúc đơn giản hơn."
            ],
            "correctAnswer": 1,
            "difficulty": "hard",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aede7",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aede7",
            "question": "Trong bối cảnh kiến trúc Hexagonal, thành phần nào chịu trách nhiệm chuyển đổi dữ liệu giữa Use Case và các hệ thống bên ngoài?",
            "options": [
              "Domain Model",
              "Application Service",
              "Adapter",
              "Entity"
            ],
            "correctAnswer": 2,
            "difficulty": "medium",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aedee",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aedee",
            "question": "Một tổ chức muốn chuyển đổi một ứng dụng monolithic lớn sang kiến trúc Hexagonal. Thách thức lớn nhất mà họ có thể gặp phải là gì?",
            "options": [
              "Chọn ngôn ngữ lập trình phù hợp.",
              "Xác định ranh giới rõ ràng cho Domain Model và các Adapter.",
              "Tìm kiếm các nhà phát triển có kinh nghiệm về Hexagonal Architecture.",
              "Mua một framework Hexagonal Architecture thương mại."
            ],
            "correctAnswer": 1,
            "difficulty": "hard",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aedef",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aedef",
            "question": "Bạn đang đánh giá một công nghệ mới có thể thay thế một Adapter hiện tại trong hệ thống Hexagonal Architecture. Tiêu chí quan trọng nhất bạn sẽ sử dụng để đánh giá công nghệ mới là gì?",
            "options": [
              "Hiệu suất của công nghệ mới.",
              "Khả năng tương thích của công nghệ mới với Domain Model.",
              "Chi phí của công nghệ mới.",
              "Mức độ phổ biến của công nghệ mới trong cộng đồng."
            ],
            "correctAnswer": 1,
            "difficulty": "medium",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        },
        {
          "question_id": "6825be0117dee8fe148aedeb",
          "answer": null,
          "other": "",
          "point": 0,
          "is_skip": 0,
          "question": {
            "_id": "6825be0117dee8fe148aedeb",
            "question": "Trong một dự án sử dụng Hexagonal Architecture, bạn cần thay đổi cơ chế xác thực người dùng từ sử dụng username/password sang sử dụng OAuth2. Thay đổi này sẽ ảnh hưởng đến thành phần nào của kiến trúc?",
            "options": [
              "Domain Model",
              "Application Service",
              "Adapter (Authentication)",
              "Entity"
            ],
            "correctAnswer": 2,
            "difficulty": "easy",
            "category": "Hexagonal Architecture",
            "topic": "Hexagonal Architecture",
            "topic_id": "6824096bf2eff742df1f948b"
          }
        }
      ],
      "essay": {
        "question": null,
        "answer": null,
        "is_skip": 0
      },
      "review": {
        "comment": "",
        "status": "submitted"
      },
      "candidate": {
        "_id": "682b0362b5913c257256b60a",
        "full_name": "",
        "email": "user@example.com",
        "phone_number": "",
        "skills": [],
        "programming_languages": [],
        "interview_level": "",
        "status": ""
      }
    }
  ]
}